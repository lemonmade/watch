scalar Url
scalar Date
scalar Version
scalar ExtensionPoint
scalar ExtensionApiVersion

type Asset {
  source: Url!
}

type BuildError {
  message: String!
  stack: String
}

type ExtensionBuildInProgress {
  id: ID!
  startedAt: Date!
}

type ExtensionBuildSuccess {
  id: ID!
  finishedAt: Date!
  startedAt: Date!
  duration: Int!
  assets: [Asset!]!
}

type ExtensionBuildError {
  id: ID!
  error: BuildError!
  finishedAt: Date!
  duration: Int!
  startedAt: Date!
}

union ExtensionBuild =
    ExtensionBuildInProgress
  | ExtensionBuildSuccess
  | ExtensionBuildError

scalar ClipsExtensionPoint

type ClipsExtensionPointSupportSeriesCondition {
  handle: String
}

type ClipsExtensionPointSupportCondition {
  series: ClipsExtensionPointSupportSeriesCondition
}

type ClipsExtensionPointPreview {
  url(connect: Boolean): Url!
}

type ClipsExtensionPointSupport {
  target: ClipsExtensionPoint!
  module: String!
  preview: ClipsExtensionPointPreview!
  conditions: [ClipsExtensionPointSupportCondition!]!
}

type ClipsExtension {
  id: ID!
  name: String!
  handle: String!
  build: ExtensionBuild!
  extends: [ClipsExtensionPointSupport!]!
}

union Extension = ClipsExtension

type App {
  name: String!
  handle: String!
  extensions: [Extension!]!
  extension(id: ID!): Extension
  clipsExtension(id: ID!): ClipsExtension
}

type Query {
  version: Version!
  app: App!
}

schema {
  query: Query
}
