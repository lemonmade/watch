.displayInline {
  display: var(
    --z-internal-display-none,
    var(--z-internal-display-block, inline)
  );
}

.displayBlock {
  display: var(
    --z-internal-display-none,
    var(--z-internal-display-block, block)
  );
}

.displayInlineGrid {
  display: var(
    --z-internal-display-none,
    var(--z-internal-display-grid, inline-grid)
  );
}

.displayGrid {
  display: var(--z-internal-display-none, var(--z-internal-display-grid, grid));
}

.displayInlineFlex {
  display: var(
    --z-internal-display-none,
    var(--z-internal-display-flex, inline-flex)
  );
}

.displayFlex {
  display: var(--z-internal-display-none, var(--z-internal-display-flex, flex));
}

:where(.contentInlineSizeFill) > * {
  --z-internal-display-block: block;
  --z-internal-display-flex: flex;
  --z-internal-display-grid: grid;
  --z-internal-container-inline-size: 100%;
}

.inlineAlignmentStart {
  --z-internal-inline-alignment: start;
}

.inlineAlignmentCenter {
  --z-internal-inline-alignment: center;
}

.inlineAlignmentEnd {
  --z-internal-inline-alignment: end;
}

.inlineAlignmentSpaceBetween {
  --z-internal-inline-alignment: space-between;
}


.paddingTiny {
  padding: var(--z-spacing-tiny);
}

.paddingSmall {
  padding: var(--z-spacing-small);
}

.paddingBase {
  padding: var(--z-spacing-base);
}

.paddingLarge {
  padding: var(--z-spacing-large);
}

.paddingHuge {
  padding: var(--z-spacing-huge);
}

.paddingInlineStartNone {
  padding-inline-start: 0;
}

.paddingInlineStartTiny {
  padding-inline-start: var(--z-spacing-tiny);
}

.paddingInlineStartSmall {
  padding-inline-start: var(--z-spacing-small);
}

.paddingInlineStartBase {
  padding-inline-start: var(--z-spacing-base);
}

.paddingInlineStartLarge {
  padding-inline-start: var(--z-spacing-large);
}

.paddingInlineStartHuge {
  padding-inline-start: var(--z-spacing-huge);
}

.paddingInlineEndNone {
  padding-inline-end: 0;
}

.paddingInlineEndTiny {
  padding-inline-end: var(--z-spacing-tiny);
}

.paddingInlineEndSmall {
  padding-inline-end: var(--z-spacing-small);
}

.paddingInlineEndBase {
  padding-inline-end: var(--z-spacing-base);
}

.paddingInlineEndLarge {
  padding-inline-end: var(--z-spacing-large);
}

.paddingInlineEndHuge {
  padding-inline-end: var(--z-spacing-huge);
}

.paddingBlockStartNone {
  padding-block-start: 0;
}

.paddingBlockStartTiny {
  padding-block-start: var(--z-spacing-tiny);
}

.paddingBlockStartSmall {
  padding-block-start: var(--z-spacing-small);
}

.paddingBlockStartBase {
  padding-block-start: var(--z-spacing-base);
}

.paddingBlockStartLarge {
  padding-block-start: var(--z-spacing-large);
}

.paddingBlockStartHuge {
  padding-block-start: var(--z-spacing-huge);
}

.paddingBlockEndNone {
  padding-block-end: 0;
}

.paddingBlockEndTiny {
  padding-block-end: var(--z-spacing-tiny);
}

.paddingBlockEndSmall {
  padding-block-end: var(--z-spacing-small);
}

.paddingBlockEndBase {
  padding-block-end: var(--z-spacing-base);
}

.paddingBlockEndLarge {
  padding-block-end: var(--z-spacing-large);
}

.paddingBlockEndHuge {
  padding-block-end: var(--z-spacing-huge);
}

.resetOrientation {
  --z-internal-divider-inline-size: 0;
  --z-internal-divider-block-size: initial;
}

.scrollLock {
  overflow: hidden;
}

.visibilityHidden {
  --z-implicit-display-none: none;
}

.visibilityVisuallyHidden {
  position: absolute !important;
  top: 0;
  clip: rect(1px, 1px, 1px, 1px) !important;
  overflow: hidden !important;
  height: 1px !important;
  width: 1px !important;
  padding: 0 !important;
  border: 0 !important;
}
