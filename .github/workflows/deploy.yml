name: Deploy

on:
  push:
    branches:
      - main

jobs:
  ci:
    name: CI üß™
    uses: ./.github/workflows/ci.yml
    with:
      build: false

  build:
    name: Build üèó
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/workflows/actions/prepare
      - uses: quilt-framework/action-build@v2
        with:
          cache-key: v7

      - name: Generate Prisma artifacts
        run: pnpm prisma generate

      - name: Build Prisma layers
        run: node ./scripts/build-prisma-layers/build-prisma-layers.js

      - name: Save build artifacts
        uses: actions/upload-artifact@v2
        with:
          name: build
          path: |
            ./build/
            ./app/build/
            ./functions/*/build/
            ./packages/*/build/
            ./packages/*/bin/

  deploy-packages:
    name: Deploy updated packages üì¶
    needs: [ci, build]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/workflows/actions/prepare

      - name: Restore build artifacts
        uses: actions/download-artifact@v2
        with:
          name: build

      - name: Deploy updated packages
        run: |
          echo //registry.npmjs.org/:_authToken=${NPM_TOKEN} > .npmrc
          pnpm packages:deploy -- --no-git-checks
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

  deploy-fly:
    name: Deploy to Fly.io ü¶ã
    needs: [ci, build]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/workflows/actions/prepare

      - name: Restore build artifacts
        uses: actions/download-artifact@v2
        with:
          name: build

      # @see https://github.com/superfly/flyctl-actions
      - uses: superfly/flyctl-actions/setup-flyctl@master

      - name: Deploy application code to Fly.io
        run: flyctl deploy --remote-only --config app/fly.toml --dockerfile app/Dockerfile
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}

  deploy-aws:
    name: Deploy to AWS üõ∞
    needs: [ci, build]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/workflows/actions/prepare

      - name: Restore build artifacts
        uses: actions/download-artifact@v2
        with:
          name: build

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Deploy application code to AWS
        run: pnpm run deploy:cdk deploy WatchStack -- -- --require-approval never

  deploy-cloudflare:
    name: Deploy to Cloudflare ‚òÅÔ∏è
    needs: [deploy-fly, deploy-aws]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/workflows/actions/prepare

      - name: Restore build artifacts
        uses: actions/download-artifact@v2
        with:
          name: build

      - name: Deploy application code to Cloudflare
        run: pnpm run deploy:wrangler publish -- --config functions/router/wrangler.toml
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
