name: Deploy

on:
  push:
    branches:
      - main

jobs:
  build:
    name: Build 🏗
    runs-on: ubuntu-latest
    steps:
      - uses: quilt-framework/action-prepare@v1
      - uses: quilt-framework/action-build@v2

      - name: Build Prisma layers
        run: node ./scripts/build-prisma-layers.js

      - name: Save build artifacts
        uses: actions/upload-artifact@v2
        with:
          name: build
          path: |
            ./build/
            ./app/build/
            ./functions/*/build/
            ./packages/*/build/
            ./packages/*/bin/

  deploy-packages:
    name: Deploy updated packages 📦
    needs: build
    runs-on: ubuntu-latest

    steps:
      - uses: quilt-framework/action-prepare@v1

      - name: Restore build artifacts
        uses: actions/download-artifact@v2
        with:
          name: build

      - name: Deploy updated packages
        run: |
          echo //registry.npmjs.org/:_authToken=${NPM_TOKEN} > .npmrc
          yarn packages:publish
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

  deploy-aws:
    name: Deploy to AWS 🛰
    needs: build
    runs-on: ubuntu-latest

    steps:
      - uses: quilt-framework/action-prepare@v1

      - name: Restore build artifacts
        uses: actions/download-artifact@v2
        with:
          name: build

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Deploy database migration infrastructure to AWS
        run: yarn cdk deploy WatchMigrateDatabaseStack --require-approval never

      - name: Run database migrations
        run: aws lambda invoke --function-name WatchMigratePrimaryDatabaseFunction /dev/stdout

      - name: Deploy application code to AWS
        run: yarn cdk deploy WatchStack --require-approval never
