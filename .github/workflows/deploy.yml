name: Deploy

on:
  push:
    branches:
      - main
      - update-dev-server

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v1
        name: Checkout

      - uses: actions/setup-node@v1
        name: Setup node.js and yarn
        with:
          node-version: 15.4.0

      - name: Get yarn cache directory
        id: yarn-cache-get-dir
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v1
        id: yarn-cache
        name: Restore yarn cache
        with:
          path: ${{ steps.yarn-cache-get-dir.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Yarn install
        run: yarn install --frozen-lockfile

      - name: Build
        run: yarn type-check && yarn build

      - name: Display build
        run: ls -R
        working-directory: ./build

      - name: Zip build artifacts
        run: zip -r ../build.zip ./*
        working-directory: ./build

      - name: Save build artifacts
        uses: actions/upload-artifact@v1
        with:
          name: build
          path: build.zip

  deploy-npm:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
        name: Checkout

      - uses: actions/setup-node@v1
        name: Setup node.js and yarn
        with:
          node-version: 15.4.0

      - name: Get yarn cache directory
        id: yarn-cache-get-dir
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v1
        id: yarn-cache
        name: Restore yarn cache
        with:
          path: ${{ steps.yarn-cache-get-dir.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Yarn install
        run: yarn install --frozen-lockfile

      - name: Restore build artifacts
        uses: actions/download-artifact@v1
        with:
          name: build
          path: build

      - name: Deploy updated packages
        run: |
          echo //registry.npmjs.org/:_authToken=${NPM_TOKEN} > .npmrc
          yarn packages:publish
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

  aws:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v1
        name: Checkout

      - uses: actions/setup-node@v1
        name: Setup node.js and yarn
        with:
          node-version: 15.4.0

      - name: Get yarn cache directory
        id: yarn-cache-get-dir
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v1
        id: yarn-cache
        name: Restore yarn cache
        with:
          path: ${{ steps.yarn-cache-get-dir.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Yarn install
        run: yarn install --frozen-lockfile

      - name: Restore build artifacts
        uses: actions/download-artifact@v1
        with:
          name: build
          path: build

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Run the CDK
        run: yarn cdk deploy
